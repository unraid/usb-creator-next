name: Build Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install MSYS2
      shell: pwsh
      run: |
        choco install msys2 --yes
        # Add MSYS2 to PATH for this session
        [System.IO.File]::WriteAllText("$env:GITHUB_ENV", "PATH=$($env:PATH);C:\tools\msys64\usr\bin;C:\tools\msys64\mingw64\bin")

    - name: Install MSYS2 Packages
      shell: bash
      run: |
        pacman -Sy << Y
        pacman -S base-devel git mercurial cvs wget p7zip
        pacman -S perl ruby python2 mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain << Y
        cpan install CPAN::Author Pod::Usage CPAN

        source /etc/profile
        exec bash -l

    - name: Install Qt
      uses: jurplel/install-qt-action@v3

    - name: Download and Install OpenSSL
      shell: bash
      run: |
        curl -L -o openssl.tar.gz https://www.openssl.org/source/openssl-1.1.1.tar.gz
        tar -xzvf openssl.tar.gz
        cd openssl-1.1.1
        # Set environment variables and run OpenSSL build
        export PATH=$PATH:/c/openssl-1.1.1/dist/bin
        export INCLUDE=$INCLUDE:/c/openssl-1.1.1/dist/include
        export LIB=$LIB:/c/openssl-1.1.1/dist/lib
        ./Configure --prefix=$PWD/dist no-idea no-mdc2 no-rc5 shared mingw
        make depend && make && make install

        # Verify the OpenSSL installation
        echo "Verifying the OpenSSL build output:"
        ls out32dll  # Check if the DLLs are generated
        ls /c/openssl-1.1.1/dist/bin
        ls /c/openssl-1.1.1/dist/include
        ls /c/openssl-1.1.1/dist/lib

        # Create directories for Qt
        mkdir -p /c/qt/5.15.2/mingw73_32/bin
        mkdir -p /c/qt/5.15.2/mingw73_32/include
        mkdir -p /c/qt/5.15.2/mingw73_32/lib

        # Copy the OpenSSL output to Qt directories
        cp out32dll/libssl.dll /c/qt/5.15.2/mingw73_32/bin
        cp out32dll/libcrypto.dll /c/qt/5.15.2/mingw73_32/bin
        cp -r include/openssl /c/qt/5.15.2/mingw73_32/include
        cp out32dll/libssl.lib /c/qt/5.15.2/mingw73_32/lib
        cp out32dll/libcrypto.lib /c/qt/5.15.2/mingw73_32/lib

        # Verify the copy operation
        echo "Verifying the copied files:"
        ls /c/qt/5.15.2/mingw73_32/bin
        ls /c/qt/5.15.2/mingw73_32/include/openssl
        ls /c/qt/5.15.2/mingw73_32/lib

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
